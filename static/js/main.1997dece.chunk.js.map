{"version":3,"sources":["Todo.js","NewTodoForm.js","TodoList.js","App.js","index.js"],"names":["Todo","props","state","isEditing","task","title","handleClick","bind","toggleForm","handleChange","handleUpdate","handleToggle","this","removeTodo","id","setState","event","target","value","preventDefault","updateTodo","toggleTodo","className","onSubmit","type","name","onChange","completed","onClick","class","Component","NewTodoForm","handleSubmit","createTodo","uuid","placeholder","TodoList","todos","create","remove","update","toggleCompletion","newTodo","filter","todo","updatedTask","updatedTodos","map","todoList","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1997dece.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Todo.css';\n\nclass Todo extends Component {\n  constructor (props) {\n    super (props);\n    this.state = { isEditing: false, task: this.props.title}\n    this.handleClick = this.handleClick.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleClick () {\n    this.props.removeTodo(this.props.id);\n  }\n\n  toggleForm () {\n    this.setState({isEditing: !this.state.isEditing});\n  }\n\n  handleChange (event) {\n    this.setState({\n      task: event.target.value\n    });\n  }\n\n  handleUpdate (event) {\n    event.preventDefault();\n    this.props.updateTodo(this.props.id, this.state.task);\n    this.setState({isEditing:false})\n  }\n\n  handleToggle (event) {\n    this.props.toggleTodo(this.props.id);\n  }\n\n  render (props) {\n    let result;\n    if (this.state.isEditing) {\n      result = (\n        <div className=\"Todo\">\n          <form className=\"Todo-edit-form\" onSubmit={this.handleUpdate}>\n            <input\n              type=\"text\"\n              value={this.state.task}\n              name=\"task\"\n              onChange={this.handleChange}\n            />\n            <button>Save</button>\n          </form>\n        </div>\n      );\n    } else {\n      result = (\n        <div className=\"Todo\">\n          <li\n            className={this.props.completed? 'Todo-task completed':'Todo-task'}\n            onClick={this.handleToggle}\n          >\n            {this.props.title}\n          </li>\n          <div className=\"Todo-buttons\">\n            <button onClick={this.toggleForm}>\n              <i class=\"fas fa-pen\"/>\n            </button>\n            <button onClick={this.handleClick}>\n              <i class=\"fas fa-trash\"/>\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return result\n  }\n}\n\nexport default Todo;\n","import React, {Component} from 'react';\nimport uuid from 'uuid/v4';\n\nimport './NewTodoForm.css';\n\n\nclass NewTodoForm extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {task: \"\"}\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange (event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit (event) {\n    event.preventDefault();\n    this.props.createTodo({...this.state, id: uuid(), completed: false});\n    this.setState({task: \"\"});\n  }\n\n  render () {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"NewTodoForm\">\n        <input\n          onChange={this.handleChange}\n          placeholder=\"New Task\"\n          value={this.state.task}\n          type=\"text\"\n          name=\"task\"\n        />\n        <button>Create Todo</button>\n      </form>\n    );\n  }\n}\n\nexport default NewTodoForm;\n","import React, {Component} from 'react';\nimport Todo from './Todo';\nimport NewTodoForm from './NewTodoForm';\n\nimport './TodoList.css';\n\nclass TodoList extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {todos: []}\n    this.create = this.create.bind(this);\n    this.remove = this.remove.bind(this);\n    this.update = this.update.bind(this);\n    this.toggleCompletion = this.toggleCompletion.bind(this);\n  }\n\n  create (newTodo) {\n    this.setState({todos: [...this.state.todos, newTodo]})\n  }\n\n  remove (id) {\n    this.setState({todos: this.state.todos.filter(todo => todo.id !== id)});\n  }\n\n  update (id, updatedTask) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return {...todo, task: updatedTask}\n      }\n      return todo;\n    });\n    this.setState({todos: updatedTodos});\n  }\n\n  toggleCompletion (id) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return {...todo, completed: !todo.completed}\n      }\n      return todo;\n    });\n    this.setState({todos: updatedTodos});\n  }\n\n  render () {\n\n    const todoList = this.state.todos.map(todo => {\n      return (\n        <Todo\n          title={todo.task}\n          key={todo.id}\n          id={todo.id}\n          completed={todo.completed}\n          removeTodo={this.remove}\n          updateTodo={this.update}\n          toggleTodo={this.toggleCompletion}\n        />\n      );\n    });\n\n    return (\n      <div className=\"TodoList\">\n        <h1>\n          Todo List <span>A Simple React Todo App</span>\n        </h1>\n        <ul>\n          {todoList}\n        </ul>\n        <NewTodoForm createTodo={this.create}/>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n","import React from 'react';\nimport TodoList from './TodoList';\n\n\nfunction App() {\n  return (\n    <div>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}